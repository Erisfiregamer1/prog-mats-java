plugins {
    id 'java'
}

group pGroup
apply plugin: 'idea'

sourceCompatibility = 1.8
sourceSets.main {
    java.srcDir("src/")
    resources.srcDir("assets/")
}


repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {
    implementation "com.github.younggam:multi-lib:$multilibVersion"
    implementation "com.github.Anuken.Arc:arc-core:$mindustryVersion"
    implementation "com.github.Anuken.Mindustry:core:$mindustryVersion"
    implementation "com.squareup:javapoet:$javapoetVersion"
    implementation "com.github.Anuken:jabel:$jabelVersion"
}

jar {
    archiveFileName.set "raw-$pArtifactFilename"

    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

task dexify(type: Jar) {
    archiveName "$pArtifactFilename"

    final File jarArtifact = new File(tasks.jar.archiveFile.get().asFile.parent, "raw-$pArtifactFilename"),
               dexedArtifact = new File(tasks.dexify.getTemporaryDir(), "dexed.jar")
    doFirst {
        exec {
            workingDir dexedArtifact.parent
            def command = ["d8", "--min-api", pMinApi, "--output", dexedArtifact, jarArtifact]
            if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows'))
                commandLine("cmd", "/c", *command)
            else
                commandLine(*command)

        }
    }

    from(zipTree(jarArtifact), zipTree(dexedArtifact))
}

tasks.withType(JavaExec){
    jvmArgs += "--enable-preview"
}

task buildDex dependsOn "build", "dexify"